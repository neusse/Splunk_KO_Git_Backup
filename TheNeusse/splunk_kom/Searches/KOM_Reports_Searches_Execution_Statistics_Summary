{
	"allow_skew": "15%",
	"author": "nobody",
	"cron_schedule": "*/30 * * * *",
	"defer_scheduled_searchable_idxc": "0",
	"description": "",
	"disabled": "0",
	"dispatch.allow_partial_results": "1",
	"dispatch.auto_cancel": "0",
	"dispatch.auto_pause": "0",
	"dispatch.buckets": "0",
	"dispatch.earliest_time": "-31m@m",
	"dispatch.index_earliest": "",
	"dispatch.index_latest": "",
	"dispatch.indexedRealtime": "",
	"dispatch.indexedRealtimeMinSpan": "",
	"dispatch.indexedRealtimeOffset": "",
	"dispatch.latest_time": "-1m@m",
	"dispatch.lookups": "1",
	"dispatch.max_count": "500000",
	"dispatch.max_time": "0",
	"dispatch.rate_limit_retry": "0",
	"dispatch.reduce_freq": "10",
	"dispatch.rt_backfill": "0",
	"dispatch.rt_maximum_span": "",
	"dispatch.sample_ratio": "1",
	"dispatch.spawn_process": "1",
	"dispatch.time_format": "%FT%T.%Q%:z",
	"dispatch.ttl": "2p",
	"dispatchAs": "owner",
	"eai:acl.app": "splunk_kom",
	"eai:acl.can_change_perms": "1",
	"eai:acl.can_list": "1",
	"eai:acl.can_share_app": "1",
	"eai:acl.can_share_global": "1",
	"eai:acl.can_share_user": "0",
	"eai:acl.can_write": "1",
	"eai:acl.modifiable": "1",
	"eai:acl.owner": "nobody",
	"eai:acl.perms.read": "admin",
	"eai:acl.perms.write": "admin",
	"eai:acl.removable": "0",
	"eai:acl.sharing": "app",
	"embed.enabled": "0",
	"is_scheduled": "1",
	"is_visible": "1",
	"max_concurrent": "1",
	"precalculate_required_fields_for_alerts": "1",
	"published": "",
	"realtime_schedule": "1",
	"request.ui_dispatch_app": "splunk_kom",
	"request.ui_dispatch_view": "search",
	"restart_on_searchpeer_add": "1",
	"run_n_times": "0",
	"run_on_startup": "0",
	"schedule_as": "auto",
	"schedule_priority": "default",
	"schedule_window": "auto",
	"skip_scheduled_realtime_idxc": "0",
	"splunk_server": "TheNeusse",
	"target": "saved/searches",
	"title": "KOM_Reports_Searches_Execution_Statistics_Summary",
	"updated": "1969-12-31T16:00:00-08:00",
	"vsid": "",
	"workload_pool": "",
	"search": 
index=_audit sourcetype=audittrail 
(TERM(info=granted) TERM(search_id=*)) OR (TERM(info=completed) OR TERM(info=canceled))
| eval user=if((user == "n/a"),null(),user)
| eval search_id=trim(search_id, "'") 
| rex field=search_id "^(?<sid_caller>\w+)((_|__)(?<sid_owner>\w+)(_|__)(?<sid_app>\w+)__(?<sid_search_name>\w+))_at"
| eval sid_caller = rtrim(sid_caller,"_")
| eval owner = rtrim(owner,"_")
| eval search_type=case(match(sid_caller,"^(SummaryDirector_|summarize_)"),"summarization",match(sid_caller,"^((rsa_|rt_|summarize_)?scheduler|alertsmanager)"),"scheduled", match(search_id,"^_[a-zA-Z0-9]+__"), "scheduled", match(sid_caller,"^subsearch_"),"subsearch", (isnotnull(sid_caller) AND isnotnull(sid_owner) AND isnotnull(sid_search_name)),"report", true(),"other")
| rename sid_caller AS sid_user
| where search_type="report"
| stats earliest(user) AS user
    earliest(host) AS orig_splunk_server
    earliest(savedsearch_name) AS savedsearch_name
    earliest(search) AS search_string
    latest(eval(if(info="completed", _time, null()))) AS completed_time
    latest(eval(if(info="granted", _time, null()))) AS granted_time    
    latest(total_run_time) AS total_run_time
    latest(duration_command_search_rawdata_bucketcache_miss) AS rawdata_cache_miss
    latest(duration_command_search_index_bucketcache_miss) AS index_cache_miss
    latest(duration_command_search_rawdata) AS rawdata_time
    latest(duration_command_search_index) AS index_time
    latest(drop_count) AS drop_count
    latest(scan_count) AS scan_count
    latest(event_count) AS event_count
    latest(search_startup_time) AS search_startup_time
    latest(searched_buckets) AS searched_buckets
    latest(eliminated_buckets) AS eliminated_buckets
    latest(considered_events) AS considered_events
    latest(total_slices) AS total_slices
    latest(decompressed_slices) AS decompressed_slices
    latest(search_et) AS search_et
    latest(search_lt) AS search_lt
    by search_id search_type sid_user sid_owner sid_app sid_search_name
| eval sid_user=trim(sid_user, "_") 
| eval completed_time = completed_time + 1, granted_time = granted_time + 1, span=round(search_lt - search_et, 0)
| eval search_time = round(completed_time - granted_time,2)
| eval run_vs_duration_time = round(search_time - total_run_time,2)
| eval span_pretty=tostring(round(span, 0), "duration")
| fields - search_et search_lt
| rename user AS search_user
    search_string AS search_spl, total_run_time AS total_run_time_sec,
    scan_count AS scanned_events, event_count AS matching_events,
    drop_count AS dropped_events,
    searched_buckets AS buckets_in_time_range,
    eliminated_buckets AS bloomfilter_eliminated_bkts,
    considered_events AS events_in_matching_bkts,
    total_slices AS slices_in_matching_bkts ,
    rawdata_time AS ms_spent_extracting_rawdata,
    index_time AS ms_spent_examing_tsidx,
    span AS search_span_sec,
    span_pretty AS search_span,
    decompressed_slices AS slices_decompressed,
| eval app_name = sid_app
| fields run_vs_duration_time search_time total_run_time_sec granted_time completed_time app_name sid_user sid_search_name sid_app search_type *
| localop
| kombase64 action=decode app_name
}
