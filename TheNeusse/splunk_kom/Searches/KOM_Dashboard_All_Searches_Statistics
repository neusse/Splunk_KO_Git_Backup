{
	"allow_skew": "5m",
	"author": "nobody",
	"cron_schedule": "52 * * * *",
	"defer_scheduled_searchable_idxc": "0",
	"description": "",
	"disabled": "0",
	"dispatch.allow_partial_results": "1",
	"dispatch.auto_cancel": "0",
	"dispatch.auto_pause": "0",
	"dispatch.buckets": "0",
	"dispatch.earliest_time": "-80m@m",
	"dispatch.index_earliest": "",
	"dispatch.index_latest": "",
	"dispatch.indexedRealtime": "",
	"dispatch.indexedRealtimeMinSpan": "",
	"dispatch.indexedRealtimeOffset": "",
	"dispatch.latest_time": "-20m@m",
	"dispatch.lookups": "1",
	"dispatch.max_count": "500000",
	"dispatch.max_time": "0",
	"dispatch.rate_limit_retry": "0",
	"dispatch.reduce_freq": "10",
	"dispatch.rt_backfill": "0",
	"dispatch.rt_maximum_span": "",
	"dispatch.sample_ratio": "1",
	"dispatch.spawn_process": "1",
	"dispatch.time_format": "%FT%T.%Q%:z",
	"dispatch.ttl": "2p",
	"dispatchAs": "owner",
	"eai:acl.app": "splunk_kom",
	"eai:acl.can_change_perms": "1",
	"eai:acl.can_list": "1",
	"eai:acl.can_share_app": "1",
	"eai:acl.can_share_global": "1",
	"eai:acl.can_share_user": "0",
	"eai:acl.can_write": "1",
	"eai:acl.modifiable": "1",
	"eai:acl.owner": "nobody",
	"eai:acl.perms.read": "admin",
	"eai:acl.perms.write": "admin",
	"eai:acl.removable": "0",
	"eai:acl.sharing": "app",
	"embed.enabled": "0",
	"is_scheduled": "1",
	"is_visible": "1",
	"max_concurrent": "1",
	"precalculate_required_fields_for_alerts": "1",
	"published": "",
	"realtime_schedule": "0",
	"request.ui_dispatch_app": "splunk_kom",
	"request.ui_dispatch_view": "search",
	"restart_on_searchpeer_add": "1",
	"run_n_times": "0",
	"run_on_startup": "0",
	"schedule_as": "auto",
	"schedule_priority": "default",
	"schedule_window": "5m",
	"skip_scheduled_realtime_idxc": "0",
	"splunk_server": "TheNeusse",
	"target": "saved/searches",
	"title": "KOM_Dashboard_All_Searches_Statistics",
	"updated": "1969-12-31T16:00:00-08:00",
	"vsid": "",
	"workload_pool": "",
	"search": 
`kom_summary_indexes` source="KOM_Dashboard_Searches*" dash_epoch=*
| lookup kom_dashboard_searches sid_user sid_app dash_epoch shc_member OUTPUTNEW DashboardName AS dashboard_name_lookup app_name AS app_name_lookup
| eval decoded_sid_app = if(isnotnull(sid_app),sid_app,"")
| kombase64 action=decode decoded_sid_app
| eval app_name = if(app_name == sid_app,decoded_sid_app,app_name)
| eval DashboardName = if(isnull(DashboardName) OR DashboardName=="",dashboard_name_lookup,DashboardName)
| eval kom_search_execution_stats=if(kom_summary_type="dashboard_searches_utilisation",0,1)
| eval kom_search_resource_stats=if(kom_summary_type="dashboard_searches_utilisation",1,0)
| stats values(DashboardName) AS dashboard_name values(sid_app) AS sid_app dc(search_spl) AS dc_spl avg(avg_idx_cpu) AS avg_idx_cpu avg(avg_sh_cpu) AS avg_sh_cpu avg(total_run_time_sec) AS avg_total_run_time_sec avg(avg_idx_read_mb) AS avg_idx_read_mb avg(avg_idx_written_mb) AS avg_idx_written_mb avg(avg_idx_pct_mem) AS avg_idx_pct_mem avg(avg_sh_read_mb) AS avg_sh_read_mb avg(avg_sh_written_mb) AS avg_sh_written_mb avg(avg_sh_pct_mem) AS avg_sh_pct_mem max(max_idx_cpu) AS max_idx_cpu max(max_idx_read_mb) AS max_idx_read_mb max(max_idx_written_mb) AS max_idx_written_mb max(max_idx_pct_mem) AS max_idx_pct_mem max(max_sh_cpu) AS max_sh_cpu max(max_sh_read_mb) AS max_sh_read_mb max(max_sh_written_mb) AS max_sh_written_mb max(max_sh_pct_mem) AS max_sh_pct_mem avg(ms_spent_extracting_rawdata) AS ms_spent_extracting_rawdata avg(ms_spent_examing_tsidx) AS ms_spent_examing_tsidx avg(dropped_events) AS dropped_events avg(scanned_events) AS scanned_events avg(event_count) AS event_count avg(search_startup_time) AS search_startup_time avg(searched_buckets) AS searched_buckets avg(bloomfilter_eliminated_bkts) AS bloomfilter_eliminated_bkts avg(events_in_matching_bkts) AS events_in_matching_bkts avg(slices_in_matching_bkts) AS slices_in_matching_bkts avg(slices_decompressed) AS slices_decompressed avg(search_span_sec) AS search_span_sec sum(kom_search_execution_stats) AS kom_search_execution_stats sum(kom_search_resource_stats) AS kom_search_resource_stats 
  by sid_search_name dash_epoch app_name
}
