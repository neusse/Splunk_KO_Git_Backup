{
	"allow_skew": "0",
	"author": "nobody",
	"cron_schedule": "",
	"defer_scheduled_searchable_idxc": "0",
	"description": "",
	"disabled": "0",
	"dispatch.allow_partial_results": "1",
	"dispatch.auto_cancel": "0",
	"dispatch.auto_pause": "0",
	"dispatch.buckets": "0",
	"dispatch.earliest_time": "",
	"dispatch.index_earliest": "",
	"dispatch.index_latest": "",
	"dispatch.indexedRealtime": "",
	"dispatch.indexedRealtimeMinSpan": "",
	"dispatch.indexedRealtimeOffset": "",
	"dispatch.latest_time": "",
	"dispatch.lookups": "1",
	"dispatch.max_count": "500000",
	"dispatch.max_time": "0",
	"dispatch.rate_limit_retry": "0",
	"dispatch.reduce_freq": "10",
	"dispatch.rt_backfill": "0",
	"dispatch.rt_maximum_span": "",
	"dispatch.sample_ratio": "1",
	"dispatch.spawn_process": "1",
	"dispatch.time_format": "%FT%T.%Q%:z",
	"dispatch.ttl": "2p",
	"dispatchAs": "owner",
	"eai:acl.app": "Splunk_Security_Essentials",
	"eai:acl.can_change_perms": "1",
	"eai:acl.can_list": "1",
	"eai:acl.can_share_app": "1",
	"eai:acl.can_share_global": "1",
	"eai:acl.can_share_user": "0",
	"eai:acl.can_write": "1",
	"eai:acl.modifiable": "1",
	"eai:acl.owner": "nobody",
	"eai:acl.perms.read": "*",
	"eai:acl.perms.write": "['admin', 'power']",
	"eai:acl.removable": "0",
	"eai:acl.sharing": "app",
	"embed.enabled": "0",
	"is_scheduled": "0",
	"is_visible": "1",
	"max_concurrent": "1",
	"precalculate_required_fields_for_alerts": "1",
	"published": "",
	"realtime_schedule": "1",
	"request.ui_dispatch_app": "",
	"request.ui_dispatch_view": "",
	"restart_on_searchpeer_add": "1",
	"run_n_times": "0",
	"run_on_startup": "0",
	"schedule_as": "auto",
	"schedule_priority": "default",
	"schedule_window": "0",
	"skip_scheduled_realtime_idxc": "0",
	"splunk_server": "TheNeusse",
	"target": "saved/searches",
	"title": "Generate Datamodels Lookup",
	"updated": "1969-12-31T16:00:00-08:00",
	"vsid": "",
	"workload_pool": "",
	"search": 
| datamodel 
| spath input=_raw output=modelName path=modelName 
| spath input=_raw output=objectName path=objects{}.objectName 
| spath input=_raw output=parentName path=objects{}.parentName 
| spath input=_raw output=tags path=objects{}.comment 
| fields modelName objectName parentName tags 
| eval objectName=mvappend(objectName,"ROOT - "+modelName) 
| eval tags=mvappend(tags,mvindex(tags,0)) 
| eval nodeNameMerge=mvzip(objectName,tags) 
| mvexpand nodeNameMerge 
| eval nodeName=mvindex(split(nodeNameMerge,","),0) 
| eval tags=mvindex(split(nodeNameMerge,",{\"tags\":"),1) 
| eval tags=replace(tags,"[\[\]\"\}]","") 
| eval datamodel=if(like(nodeName,"ROOT%"),modelName,modelName.".".nodeName) 
| eval nodeName=if(like(nodeName,"ROOT%"),null(),nodeName) 
| table datamodel modelName nodeName tags 
| join modelName 
    [| rest splunk_server=local count=0 /servicesNS/-/-/admin/datamodel-files 
    | rename title AS modelName,eai:acl.app AS app 
    | table modelName, app 
    | search NOT app IN(SplunkAppForWebAnalytics, search) 
    | join app 
        [| rest /services/apps/local 
        | table title version 
        | rename title as app
            ]
        ] 
| join datamodel type=outer 
    [| ssedata config="data_inventory" 
    | fields data_source data_source_category data_source_category_tags data_source_category_datamodel 
    | eval data_source_category_datamodel=split(data_source_category_datamodel,"|") 
    | stats values(data_source_category) AS data_source_category BY data_source_category_datamodel 
    | rename data_source_category_datamodel AS datamodel 
    | eval data_source_category=mvjoin(data_source_category,"|")
        ]
| outputlookup datamodels
}
