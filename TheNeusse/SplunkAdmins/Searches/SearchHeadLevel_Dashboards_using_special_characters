{
	"allow_skew": "0",
	"author": "nobody",
	"cron_schedule": "",
	"defer_scheduled_searchable_idxc": "0",
	"description": "Report only? Yes. Find special characters in dashboard searches, they are often copy & pasted in from another application and break searches",
	"disabled": "0",
	"dispatch.allow_partial_results": "1",
	"dispatch.auto_cancel": "0",
	"dispatch.auto_pause": "0",
	"dispatch.buckets": "0",
	"dispatch.earliest_time": "-65m@m",
	"dispatch.index_earliest": "",
	"dispatch.index_latest": "",
	"dispatch.indexedRealtime": "",
	"dispatch.indexedRealtimeMinSpan": "",
	"dispatch.indexedRealtimeOffset": "",
	"dispatch.latest_time": "-5m@m",
	"dispatch.lookups": "1",
	"dispatch.max_count": "500000",
	"dispatch.max_time": "0",
	"dispatch.rate_limit_retry": "0",
	"dispatch.reduce_freq": "10",
	"dispatch.rt_backfill": "0",
	"dispatch.rt_maximum_span": "",
	"dispatch.sample_ratio": "1",
	"dispatch.spawn_process": "1",
	"dispatch.time_format": "%FT%T.%Q%:z",
	"dispatch.ttl": "2p",
	"dispatchAs": "owner",
	"eai:acl.app": "SplunkAdmins",
	"eai:acl.can_change_perms": "1",
	"eai:acl.can_list": "1",
	"eai:acl.can_share_app": "1",
	"eai:acl.can_share_global": "1",
	"eai:acl.can_share_user": "0",
	"eai:acl.can_write": "1",
	"eai:acl.modifiable": "1",
	"eai:acl.owner": "nobody",
	"eai:acl.perms.read": "['admin', 'sc_admin']",
	"eai:acl.perms.write": "['admin', 'sc_admin']",
	"eai:acl.removable": "0",
	"eai:acl.sharing": "app",
	"embed.enabled": "0",
	"is_scheduled": "0",
	"is_visible": "1",
	"max_concurrent": "1",
	"precalculate_required_fields_for_alerts": "1",
	"published": "",
	"realtime_schedule": "1",
	"request.ui_dispatch_app": "SplunkAdmins",
	"request.ui_dispatch_view": "search",
	"restart_on_searchpeer_add": "1",
	"run_n_times": "0",
	"run_on_startup": "0",
	"schedule_as": "auto",
	"schedule_priority": "default",
	"schedule_window": "0",
	"skip_scheduled_realtime_idxc": "0",
	"splunk_server": "TheNeusse",
	"target": "saved/searches",
	"title": "SearchHeadLevel - Dashboards using special characters",
	"updated": "1969-12-31T16:00:00-08:00",
	"vsid": "",
	"workload_pool": "",
	"search": 
| rest /servicesNS/-/-/data/ui/views splunk_server=local f=eai:data f=label f=title f=eai:* timeout=600 
| fields eai:data, label, title, eai:acl.app, eai:acl.owner, eai:acl.sharing 
| search NOT (eai:acl.app=trackme AND title=TrackMe) NOT (title=available_icons AND eai:acl.app=network-diagram-viz)
| rex field=eai:data max_match=20 "(?s)<row[^>]*>(?P<row>.*?)</row>" 
| rex field=eai:data max_match=20 "(?s)<panel[^>]*>(?P<panel>.*?)</panel>" 
| rex field=eai:data max_match=20 "(?s)<chart[^>]*>(?P<chart>.*?)</chart>" 
| rex field=eai:data max_match=20 "(?s)<event[^>]*>(?P<event>.*?)</event>" 
| rex field=eai:data max_match=20 "(?s)<map[^>]*>(?P<map>.*?)</map>" 
| rex field=eai:data max_match=20 "(?s)<single[^>]*>(?P<single>.*?)</single>" 
| rex field=eai:data max_match=20 "(?s)<table[^>]*>(?P<table>.*?)</table>" 
| rex field=eai:data max_match=20 "(?s)<viz[^>]*>(?P<table>.*?)</viz>" 
| rex field=row "(?s)(?P<rowsearch><search[^>]*>.*?</search>)" 
| rex field=panel "(?s)(?P<panelsearch><search[^>]*>.*?</search>)" 
| rex field=chart "(?s)(?P<chartsearch><search[^>]*>.*?</search>)" 
| rex field=event "(?s)(?P<eventsearch><search[^>]*>.*?</search>)" 
| rex field=map "(?s)(?P<mapsearch><search[^>]*>.*?</search>)" 
| rex field=single "(?s)(?P<singlesearch><search[^>]*>.*?</search>)" 
| rex field=table "(?s)(?P<tablesearch><search[^>]*>.*?</search>)" 
| rex field=viz "(?s)(?P<vizsearch><search[^>]*>.*?</search>)" 
| eval combined=mvappend(rowsearch, panelsearch, chartsearch, eventsearch, mapsearch, singlesearch, tablesearch, vizsearch) 
| nomv combined 
| where isnotnull(combined) 
| regex combined!="(?s)^[\\\d\s\w\|`\"\*\(\)\[\]\+=\-;:!,\./%\?<>{}^#$@'&~]+$" 
| rex field=combined "(?s)(?P<before_special_character>^[\\\d\s\w\|`\"\*\(\)\[\]\+=\-;:!,\./%\?<>{}^#$@'&~]*)(?P<special_character>.)" 
| rename eai:acl.app AS app, eai:acl.sharing AS sharing, eai:acl.owner AS owner 
| table title, label, app, sharing, owner, special_character, before_special_character
}
