{
	"author": "admin",
	"disabled": "0",
	"eai:acl.app": "trackme",
	"eai:acl.can_change_perms": "1",
	"eai:acl.can_list": "1",
	"eai:acl.can_share_app": "1",
	"eai:acl.can_share_global": "1",
	"eai:acl.can_share_user": "0",
	"eai:acl.can_write": "1",
	"eai:acl.modifiable": "1",
	"eai:acl.owner": "admin",
	"eai:acl.perms.read": "*",
	"eai:acl.perms.write": "['admin', 'trackme_admin']",
	"eai:acl.removable": "0",
	"eai:acl.sharing": "global",
	"eai:appName": "trackme",
	"eai:userName": "nobody",
	"iseval": "0",
	"published": "",
	"splunk_server": "TheNeusse",
	"target": "admin/macros",
	"title": "apply_data_host_blacklists_data_retrieve",
	"updated": "1969-12-31T16:00:00-08:00",
	"definition": 
[ | inputlookup trackme_data_host_monitoring_blacklist_index
| stats values(data_index) as index | mvexpand index
| `detect_rex(index)` | where is_rex="false" | fields - is_rex | where NOT match(index, "^\*$") | format | eval search=if(match(search, "NOT \(\)"), "(index=*)", "NOT " . search) ]

[ | inputlookup trackme_data_host_monitoring_blacklist_sourcetype
| stats values(data_sourcetype) as sourcetype | mvexpand sourcetype
| `detect_rex(sourcetype)` | where is_rex="false" | fields - is_rex | where NOT match(sourcetype, "^\*$") | format | eval search=if(match(search, "NOT \(\)"), "(sourcetype=*)", "NOT " . search) ]

[ | inputlookup trackme_data_host_monitoring_blacklist_host
| stats values(data_host) as host | mvexpand host
| `detect_rex(host)` | where is_rex="false" | fields - is_rex | where NOT match(host, "^\*$") | format | eval search=if(match(search, "NOT \(\)"), "(host=*)", "NOT " . search) ]
}
