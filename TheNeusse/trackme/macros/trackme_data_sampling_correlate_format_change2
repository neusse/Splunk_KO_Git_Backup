{
	"args": "previous_model_name,current_model_name",
	"author": "admin",
	"disabled": "0",
	"eai:acl.app": "trackme",
	"eai:acl.can_change_perms": "1",
	"eai:acl.can_list": "1",
	"eai:acl.can_share_app": "1",
	"eai:acl.can_share_global": "1",
	"eai:acl.can_share_user": "0",
	"eai:acl.can_write": "1",
	"eai:acl.modifiable": "1",
	"eai:acl.owner": "admin",
	"eai:acl.perms.read": "*",
	"eai:acl.perms.write": "['admin', 'trackme_admin']",
	"eai:acl.removable": "0",
	"eai:acl.sharing": "global",
	"eai:appName": "trackme",
	"eai:userName": "nobody",
	"published": "",
	"splunk_server": "TheNeusse",
	"target": "admin/macros",
	"title": "trackme_data_sampling_correlate_format_change(2)",
	"updated": "1969-12-31T16:00:00-08:00",
	"definition": 
eval [ | inputlookup trackme_data_sampling_custom_models where model_name="$previous_model_name$" | fields model_regex | eval model_regex="match(_raw, \"" . model_regex . "\")"
| append [ | `trackme_show_builtin_model_rules` | where model_name="$previous_model_name$" | fields model_regex ]
| head 1
| eval model_name="$previous_model_name$"
| rename model_name as previous_model_name, model_regex as previous_model_regex

| appendcols [ | inputlookup trackme_data_sampling_custom_models where model_name="$current_model_name$" | fields model_regex | eval model_regex="match(_raw, \"" . model_regex . "\")"
| append [ | `trackme_show_builtin_model_rules` | where model_name="$current_model_name$" | fields model_regex ]
| head 1
| eval model_name="$current_model_name$"
| rename model_name as current_model_name, model_regex as current_model_regex ]

| eval spl = "model_match = case(" . previous_model_regex . ", \"" . previous_model_name . "\", " . current_model_regex . ", \"" . current_model_name . "\")"
| fields spl | rex field=spl mode=sed "s/match\(raw_sample/match(_raw/g"
| return $spl ]

| top model_match | eval summary = "model: [ " . model_match . " ], count: [ " . count . " ], percent: [ " . round(percent, 2) . " % ]"
| stats values(summary) as summary
| eval summary=mvjoin(summary, ", ")
}
