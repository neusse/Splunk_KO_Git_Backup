{
	"args": "data_name, index, sourcetype",
	"author": "admin",
	"disabled": "0",
	"eai:acl.app": "trackme",
	"eai:acl.can_change_perms": "1",
	"eai:acl.can_list": "1",
	"eai:acl.can_share_app": "1",
	"eai:acl.can_share_global": "1",
	"eai:acl.can_share_user": "0",
	"eai:acl.can_write": "1",
	"eai:acl.modifiable": "1",
	"eai:acl.owner": "admin",
	"eai:acl.perms.read": "*",
	"eai:acl.perms.write": "['admin', 'trackme_admin']",
	"eai:acl.removable": "0",
	"eai:acl.sharing": "global",
	"eai:appName": "trackme",
	"eai:userName": "nobody",
	"iseval": "0",
	"published": "",
	"splunk_server": "TheNeusse",
	"target": "admin/macros",
	"title": "trackme_get_tracker_data_source(3)",
	"updated": "1969-12-31T16:00:00-08:00",
	"definition": 
rest splunk_server=local /servicesNS/-/trackme/saved/searches | search eai:acl.app="trackme" title="TrackMe - *" is_visible=1 | fields title | rename title as savedsearch_name
| where match(savedsearch_name, "elastic tracker") AND match(savedsearch_name, "$data_name$")
| eval savedsearch_name = "\"" . savedsearch_name . "\""

`comment("#### First search for Elastic dedicated trackers ####")`

`comment("#### Then searches for Elastic shared trackers ####")`

| append [
| inputlookup trackme_elastic_sources | eval keyid=_key
| search data_name=$data_name$
| head 1
| streamstats count as elastic_shared_count
| fields data_name, elastic_shared_count
| eval savedsearch_name=if(elastic_shared_count=1, "\"TrackMe - Elastic sources shared tracker\"", savedsearch_name)
| fields savedsearch_name
]

`comment("#### Finally search for standard data sources ####")`

| append [
| inputlookup trackme_data_source_monitoring
| fields data_name
| search data_name="$data_name$"
| head 1
| streamstats count as standard_source_count
| fields data_name, standard_source_count
| eval savedsearch_name=if(standard_source_count=1, "\"TrackMe - Data source entity refresh\" index=\"$index$\" sourcetype=\"$sourcetype$\" data_name=\"$data_name$\"", savedsearch_name)
| fields savedsearch_name
]

`comment("#### There must one result exactly ####")`

| head 1
}
