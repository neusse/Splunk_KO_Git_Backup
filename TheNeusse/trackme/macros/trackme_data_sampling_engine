{
	"author": "admin",
	"disabled": "0",
	"eai:acl.app": "trackme",
	"eai:acl.can_change_perms": "1",
	"eai:acl.can_list": "1",
	"eai:acl.can_share_app": "1",
	"eai:acl.can_share_global": "1",
	"eai:acl.can_share_user": "0",
	"eai:acl.can_write": "1",
	"eai:acl.modifiable": "1",
	"eai:acl.owner": "admin",
	"eai:acl.perms.read": "*",
	"eai:acl.perms.write": "['admin', 'trackme_admin']",
	"eai:acl.removable": "0",
	"eai:acl.sharing": "global",
	"eai:appName": "trackme",
	"eai:userName": "nobody",
	"iseval": "0",
	"published": "",
	"splunk_server": "TheNeusse",
	"target": "admin/macros",
	"title": "trackme_data_sampling_engine",
	"updated": "1969-12-31T16:00:00-08:00",
	"definition": 
eval custom_detected_format = [ | `trackme_data_sampling_custom_models_genspl`  | return $spl ]
| `trackme_data_sampling_detect_event_format(builtin_detected_format)`
| eval current_detected_format=if(isnotnull(custom_detected_format) AND custom_detected_format!="", custom_detected_format, builtin_detected_format)
| eval current_detected_format_id=md5(current_detected_format)
`comment("##### Retrieve the custom rule type #####")`
| lookup trackme_data_sampling_custom_models model_name as custom_detected_format OUTPUT model_type
| eval model_type=if(isnull(model_type) OR model_type="", "inclusive", model_type)

`comment("##### Handle exclusive model matching #####")`
| eval exclusive_match_anomaly=if(isnotnull(custom_detected_format) AND model_type="exclusive", 1, 0)

| fields - custom_*, builtin_*

`comment("##### Detect multi-format #####")`
| eventstats dc(current_detected_format_id) as current_detected_format_dcount, max(exclusive_match_anomaly) as exclusive_match_anomaly by data_name

`comment("##### Merge per entity #####")`
| stats values(raw_sample) as raw_sample, values(current_detected_format) as current_detected_format, values(current_detected_format_id) as current_detected_format_id, first(current_detected_format_dcount) as current_detected_format_dcount, first(data_sourcetype) as data_sourcetype, first(exclusive_match_anomaly) as exclusive_match_anomaly, first(key) as key, first(model_type) as model_type by data_name

`comment("##### Lookup the custom rules ")`
| lookup trackme_data_sampling_custom_models model_id as current_detected_format_id OUTPUT model_id as custom_rule_found

`comment("##### Define data_sample_mtime #####")`
| eval data_sample_mtime=now()

`comment("##### Lookup previous values #####")`
| lookup trackme_data_sampling _key as key OUTPUT data_sample_iteration, data_sample_anomaly_ack_status, data_sample_anomaly_ack_mtime, multiformat_detected, data_sample_feature, data_sampling_nr, current_detected_format as previous_detected_format, current_detected_format_id as previous_detected_format_id, current_detected_format_dcount as previous_detected_format_dcount

`comment("##### Define the iteration #####")`
| eval data_sample_iteration=if(isnull(data_sample_iteration), 1, data_sample_iteration + 1)

`comment("##### Status evaluation ######")`
| eval data_sample_feature=if((current_detected_format_dcount>1 AND data_sample_iteration=1 AND exclusive_match_anomaly!=1) OR (current_detected_format_dcount=1 AND current_detected_format="raw_not_identified" AND data_sample_iteration=1), "disabled", if(isnull(data_sample_feature), "enabled", data_sample_feature) )
| eval multiformat_detected=if(current_detected_format_dcount>1, "true", "false")

`comment("##### Define the data sample anomaly status #####")`
`comment("##### If at first iteration over a data source, we detect a multi-format within the events sample, the data sampling feature will be disabled for this entity as results would certainly not be reliable in this context #####")`

| eval data_sample_anomaly_detected=case(
exclusive_match_anomaly=1, 1,
(previous_detected_format_id!=current_detected_format_id AND isnull(custom_rule_found)) OR (multiformat_detected="true") OR (current_detected_format_dcount=1 AND current_detected_format="raw_not_identified" AND data_sample_iteration=1), 1,
isnull(data_sample_anomaly_detected), 0
)

| eval data_sample_anomaly_reason=case(
exclusive_match_anomaly=1, "exclusive_rule_match",
data_sample_iteration=1 AND multiformat_detected="true", "multiformat_at_discovery",
current_detected_format_dcount=1 AND current_detected_format="raw_not_identified" AND data_sample_iteration=1, "no_format_at_discovery",
data_sample_iteration!=1 AND multiformat_detected="true", "multiformat_detected",
previous_detected_format_id!=current_detected_format_id AND isnull(custom_rule_found), "format_change",
previous_detected_format_dcount!=current_detected_format_dcount, "multiformat_change",
data_sample_anomaly_detected = "0", "normal")

| eval data_sample_feature=if(data_sample_iteration=1 AND multiformat_detected=="true" AND exclusive_match_anomaly!=1, "disabled", if(isnull(data_sample_feature), "enabled", data_sample_feature))

`comment("##### Format the status colour for UI rendering purposes #####")`
| eval data_sample_status_colour=case(
data_sample_anomaly_detected = "0", "green",
data_sample_anomaly_detected = "1" AND data_sample_anomaly_reason == "multiformat_at_discovery", "orange",
data_sample_anomaly_detected = "1" AND data_sample_anomaly_reason == "no_format_at_discovery", "orange",
data_sample_anomaly_detected = "1" AND data_sample_anomaly_reason == "exclusive_rule_match", "red",
data_sample_anomaly_detected = "1" AND data_sample_anomaly_reason == "format_change", "red",
data_sample_anomaly_detected = "1" AND data_sample_anomaly_reason == "multiformat_change", "red",
data_sample_anomaly_detected = "1" AND data_sample_anomaly_reason == "multiformat_detected", "red",
data_sample_feature == "disabled", "grey"
)

`comment("##### If the previous iteration detected an anomaly, and this alert was not cleared, the alert remains active until it is cleared effectively #####")`
| fillnull value="N/A" data_sample_anomaly_ack_status, data_sample_anomaly_ack_mtime, data_sample_anomaly_ack_previous_format, data_sample_anomaly_ack_new_format
| eval data_sample_anomaly_detected=if(data_sample_anomaly_ack_status != "N/A", 1, data_sample_anomaly_detected)
| eval data_sample_anomaly_ack_mtime=if(data_sample_anomaly_ack_status != "N/A" AND data_sample_anomaly_ack_mtime="N/A", data_sample_mtime, data_sample_anomaly_ack_mtime)
| eval data_sample_anomaly_ack_previous_format=if(data_sample_anomaly_ack_status != "N/A" AND data_sample_anomaly_ack_previous_format="N/A", previous_detected_format, data_sample_anomaly_ack_previous_format)
| eval data_sample_anomaly_ack_new_format=if(data_sample_anomaly_ack_status != "N/A" AND data_sample_anomaly_ack_new_format="N/A", current_detected_format, data_sample_anomaly_ack_new_format)

`comment("##### If the current iteration detects an anomaly and this is the first time of the detection #####")`
| eval data_sample_anomaly_ack_status = if(data_sample_anomaly_detected = 1 AND data_sample_anomaly_ack_status = "N/A", "uncleared", data_sample_anomaly_ack_status)
| eval data_sample_anomaly_ack_mtime = if(data_sample_anomaly_detected = 1 AND data_sample_anomaly_ack_mtime = "N/A", data_sample_mtime, data_sample_anomaly_ack_mtime)
| eval data_sample_anomaly_ack_previous_format = if(data_sample_anomaly_detected = 1 AND data_sample_anomaly_ack_previous_format = "N/A", previous_detected_format, data_sample_anomaly_ack_previous_format)
| eval data_sample_anomaly_ack_new_format = if(data_sample_anomaly_detected = 1 AND data_sample_anomaly_ack_new_format = "N/A", previous_detected_format, data_sample_anomaly_ack_new_format)

`comment("#### Format the human friendly status message #####")`
| eval data_sample_status_message = case(
data_sample_anomaly_detected = 0, "INFO: No anomalies were detected during the last data sampling operated on " . strftime(data_sample_mtime, "%c") . ", the status is " . data_sample_anomaly_reason . " and the data sampling feature is " . data_sample_feature . ". Click on the button Manage data sampling for more details.",
data_sample_anomaly_detected = 1 AND data_sample_anomaly_reason == "exclusive_rule_match", "WARNING: Anomalies were detected in data sampling, an exclusive rule has match one or more events on " . strftime(data_sample_anomaly_ack_mtime, "%c") . ", review the results and acknowledge the data sampling alert once the issue has been resolved. Click on the button Manage data sampling for more details.",
data_sample_anomaly_detected = 1 AND data_sample_anomaly_reason == "format_change", "WARNING: Anomalies were detected in data sampling, a change in the event format was detected on " . strftime(data_sample_anomaly_ack_mtime, "%c") . ", review the format of the events and acknowledge the data sampling alert if this format change was expected. Click on the button Manage data sampling for more details.",
data_sample_anomaly_detected = 1 AND (data_sample_anomaly_reason == "multiformat_change" OR data_sample_anomaly_reason == "multiformat_detected"), "WARNING: Anomalies were detected in data sampling, a change with multiple event formats was detected on " . strftime(data_sample_anomaly_ack_mtime, "%c") . ", review the format of the events and acknowledge the data sampling alert if this format change was expected. Click on the button Manage data sampling for more details.",
data_sample_anomaly_detected = 1 AND data_sample_anomaly_reason == "multiformat_at_discovery", "WARNING: The data sampling feature has been disabled automatically because multiple event formats were detected during the first sampling operation on " . strftime(data_sample_anomaly_ack_mtime, "%c") . ", sourcetypes containing multiple types of formats cannot be monitored by the data sampling properly. Click on the button Manage data sampling for more details.",
data_sample_anomaly_detected = 1 AND data_sample_anomaly_reason == "no_format_at_discovery", "WARNING: The data sampling feature has been disabled automatically because no event formats could be identified during the first sampling operation on " . strftime(data_sample_anomaly_ack_mtime, "%c") . ", if the format is reliable but cannot be identified by the builtin rules, you can create a custom rule to handle this format. Click on the button Manage data sampling for more details."
)
}
