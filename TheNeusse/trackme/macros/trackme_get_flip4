{
	"args": "state, previous_state, key, collection",
	"author": "admin",
	"disabled": "0",
	"eai:acl.app": "trackme",
	"eai:acl.can_change_perms": "1",
	"eai:acl.can_list": "1",
	"eai:acl.can_share_app": "1",
	"eai:acl.can_share_global": "1",
	"eai:acl.can_share_user": "0",
	"eai:acl.can_write": "1",
	"eai:acl.modifiable": "1",
	"eai:acl.owner": "admin",
	"eai:acl.perms.read": "*",
	"eai:acl.perms.write": "['admin', 'trackme_admin']",
	"eai:acl.removable": "0",
	"eai:acl.sharing": "global",
	"eai:appName": "trackme",
	"eai:userName": "nobody",
	"iseval": "0",
	"published": "",
	"splunk_server": "TheNeusse",
	"target": "admin/macros",
	"title": "trackme_get_flip(4)",
	"updated": "1969-12-31T16:00:00-08:00",
	"definition": 
eval hasFlipped=if($previous_state$!=$state$ AND isnull(simulation), 0, 1) | eval hasFlipped=if(isnum(hasFlipped), hasFlipped, 0)
| eval latest_flip_time=if(hasFlipped=0, now(), latest_flip_time)
| eval latest_flip_state=if(hasFlipped=0, $state$, latest_flip_state)
| eval object_state=$state$, object_previous_state=$previous_state$
| eval object=$key$, object_category=case(isnotnull(data_name), "data_source", isnotnull(data_host), "data_host", isnotnull(metric_host), "metric_host")
| appendpipe [ | where hasFlipped==0 | eval time=now(), result = strftime(now(), "%d/%m/%Y %H:%M:%S") . ", object=" . $key$ . " has flipped from previous_state=" . $previous_state$ . " to state=" . $state$ | `trackme_sumarycollect("flip_state_change_tracking")` | eval rectype="0"]
| appendpipe [ | where hasFlipped==1 | eval time=now(), rectype="1"]
| where isnotnull(rectype) | fields - hasFlipped, rectype, time
}
