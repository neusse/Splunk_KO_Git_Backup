{
	"args": "shcluster_label,search_id_normalized",
	"author": "nobody",
	"description": "Retrieves Search Information from the Audit Dataset.  Example: | `get_audit_search_info(shcluster_label,search_id_normalized)` (Quick)",
	"disabled": "0",
	"eai:acl.app": "insights_app_splunk",
	"eai:acl.can_change_perms": "1",
	"eai:acl.can_list": "1",
	"eai:acl.can_share_app": "1",
	"eai:acl.can_share_global": "1",
	"eai:acl.can_share_user": "0",
	"eai:acl.can_write": "1",
	"eai:acl.modifiable": "1",
	"eai:acl.owner": "nobody",
	"eai:acl.perms.read": "*",
	"eai:acl.perms.write": "['admin', 'power', 'sc_admin']",
	"eai:acl.removable": "0",
	"eai:acl.sharing": "app",
	"eai:appName": "insights_app_splunk",
	"eai:userName": "nobody",
	"published": "",
	"splunk_server": "TheNeusse",
	"target": "admin/macros",
	"title": "get_audit_search_info(2)",
	"updated": "1969-12-31T16:00:00-08:00",
	"definition": 
join $shcluster_label$ $search_id_normalized$ type=left 
    [| tstats SummariesOnly=TRUE Allow_OLD_Summaries=FALSE 
        Latest(_time) As _time 
        Latest(Search_Activity.Audit_Search.info1) As info 
        From DataModel=IA4S 
        Where nodename=Search_Activity.Audit_Search 
        NOT Search_Activity.Audit_Search.info1 = "granted" 
        By host Search_Activity.Audit_Search.search_id1 
    | `gmc_drop_dm_object_name(Search_Activity.Audit_Search)` 
    | rename search_id1 As search_id 
    | `get_normalized_search_id(search_id)` 
    | `get_shcluster_label(host)` 
    | eval info = case ( 
        info="completed", "Completed", 
        match(info,"^cancel"), "Canceled", 
        info="failed", "Failed", 
        true(), info) 
    | eval status_org = "get_audit_search_info" , status_audit = info
    | fields shcluster_label search_id_normalized status_audit status_org]
}
