{
	"allow_skew": "0",
	"author": "nobody",
	"cron_schedule": "20 3 * * *",
	"defer_scheduled_searchable_idxc": "0",
	"description": "Indexes Summary Index Gen Job From REST - [Daily - 03:20]",
	"disabled": "0",
	"dispatch.allow_partial_results": "1",
	"dispatch.auto_cancel": "0",
	"dispatch.auto_pause": "0",
	"dispatch.buckets": "0",
	"dispatch.earliest_time": "-1s",
	"dispatch.index_earliest": "",
	"dispatch.index_latest": "",
	"dispatch.indexedRealtime": "",
	"dispatch.indexedRealtimeMinSpan": "",
	"dispatch.indexedRealtimeOffset": "",
	"dispatch.latest_time": "now",
	"dispatch.lookups": "1",
	"dispatch.max_count": "500000",
	"dispatch.max_time": "0",
	"dispatch.rate_limit_retry": "0",
	"dispatch.reduce_freq": "10",
	"dispatch.rt_backfill": "0",
	"dispatch.rt_maximum_span": "",
	"dispatch.sample_ratio": "1",
	"dispatch.spawn_process": "1",
	"dispatch.time_format": "%FT%T.%Q%:z",
	"dispatch.ttl": "600",
	"dispatchAs": "owner",
	"eai:acl.app": "insights_app_splunk",
	"eai:acl.can_change_perms": "1",
	"eai:acl.can_list": "1",
	"eai:acl.can_share_app": "1",
	"eai:acl.can_share_global": "1",
	"eai:acl.can_share_user": "0",
	"eai:acl.can_write": "1",
	"eai:acl.modifiable": "1",
	"eai:acl.owner": "nobody",
	"eai:acl.perms.read": "*",
	"eai:acl.perms.write": "['admin', 'power', 'sc_admin']",
	"eai:acl.removable": "0",
	"eai:acl.sharing": "app",
	"embed.enabled": "0",
	"is_scheduled": "0",
	"is_visible": "1",
	"max_concurrent": "1",
	"precalculate_required_fields_for_alerts": "1",
	"published": "",
	"realtime_schedule": "1",
	"request.ui_dispatch_app": "",
	"request.ui_dispatch_view": "",
	"restart_on_searchpeer_add": "1",
	"run_n_times": "0",
	"run_on_startup": "0",
	"schedule_as": "auto",
	"schedule_priority": "default",
	"schedule_window": "auto",
	"skip_scheduled_realtime_idxc": "0",
	"splunk_server": "TheNeusse",
	"target": "saved/searches",
	"title": "splunk_rest_data_indexes_idx_summary_data_genr",
	"updated": "1969-12-31T16:00:00-08:00",
	"vsid": "",
	"workload_pool": "",
	"search": 
| rest /services/data/indexes `setup_indexer_rest` 
| join type=outer splunk_server title 
    [| rest /services/data/indexes-extended `setup_indexer_rest` ] 
| append [| rest /services/data/indexes `setup_indexer_rest` datatype=metric 
    | join type=outer splunk_server title [| rest /services/data/indexes-extended datatype=metric]] 
| rename eai:acl.* AS * | rename eai:* AS * 
| eval Splunk_Instance = lower(splunk_server) | search NOT title IN (_thefishbucket, splunklogger) 
| rename `rename_rest_data_indexes_fields` 
| `get_idxcluster_label(Splunk_Instance)` 
| `get_custom_group(Splunk_Instance)` 
| eval idxcluster_label = if(isnull(idxcluster_label) OR idxcluster_label="", Custom_Groups, idxcluster_label) 
| eval idxcluster_label = if(isnull(idxcluster_label) OR idxcluster_label="", Splunk_Instance, idxcluster_label) 
| `strptime_format(updated)` 
| eval minTime = strptime(minTime, "%Y-%m-%dT%H:%M:%S") , maxTime = strptime(maxTime, "%Y-%m-%dT%H:%M:%S") 
| stats `stats_rest_data_indexes_fields` BY idxcluster_label, title 
| eval _time = now() 
| eval currentDBSize = currentDBSizeMB * 1024 * 1024 
| foreach Splunk_Roles, Splunk_Instance, app [ eval <<FIELD>> = mvjoin(mvsort(mvdedup('<<FIELD>>')), "|") ] 
| table _time, idxcluster_label, Splunk_Roles, Splunk_Instance, app, title, disabled, archiver_enableDataArchive, archiver_maxDataArchiveRetentionPeriod, assureUTF8, cold_bucket_count, cold_bucket_size, cold_capacity, cold_event_count, cold_event_max_time, cold_event_min_time, home_capacity, home_event_count, home_event_max_time, home_event_min_time, home_hot_bucket_count, home_warm_bucket_count, home_warm_bucket_size, thawed, bucketRebuildMemoryHint, coldPath, coldPath_expanded, coldPath_maxDataSizeMB, coldToFrozenDir, coldToFrozenScript, compressRawdata, currentDBSize, currentDBSizeMB, datamodel_summary_size, datatype, defaultDatabase, enableDataIntegrityControl, enableOnlineBucketRepair, enableRealtimeSearch, enableTsidxReduction, fileSystemExecutorWorkers, frozenTimePeriodInSecs, homePath, homePath_expanded, homePath_maxDataSizeMB, hotBucketTimeRefreshInterval, indexThreads, isInternal, isReady, isVirtual, journalCompression, lastInitSequenceNumber, lastInitTime, maxBloomBackfillBucketAge, maxBucketSizeCacheEntries, maxConcurrentOptimizes, maxDataSize, maxGlobalDataSizeMB, maxGlobalRawDataSizeMB, maxHotBuckets, maxHotIdleSecs, maxHotSpanSecs, maxMemMB, maxMetaEntries, maxRunningProcessGroups, maxRunningProcessGroupsLowPriority, maxTime, maxTimeUnreplicatedNoAcks, maxTimeUnreplicatedWithAcks, maxTotalDataSizeMB, maxWarmDBCount, memPoolMB, minHotIdleSecsBeforeForceRoll, minRawFileSyncSecs, minStreamGroupQueueSize, minTime, partialServiceMetaPeriod, processTrackerServiceInterval, quarantineFutureSecs, quarantinePastSecs, rawChunkSizeBytes, repFactor, rotatePeriodInSecs, rtRouterQueueSize, rtRouterThreads, selfStorageThreads, serviceInactiveIndexesPeriod, serviceMetaPeriod, serviceOnlyAsNeeded, serviceSubtaskTimingPeriod, splitByIndexKeys, streamingTargetTsidxSyncPeriodMsec, summaryHomePath_expanded, suppressBannerList, suspendHotRollByDeleteQuery, sync, syncMeta, thawedPath, thawedPath_expanded, throttleCheckPeriod, timePeriodInSecBeforeTsidxReduction, total_bucket_count, total_capacity, total_event_count, total_raw_size, total_size, totalEventCount, tsidxReductionCheckPeriodInSec, tsidxWritingLevel, tstatsHomePath, tstatsHomePath_expanded, waitPeriodInSecsForManifestWrite, warmToColdScript, updated, archiver_coldStorageProvider, archiver_coldStorageRetentionPeriod, bucketMerge_maxMergeSizeMB, bucketMerge_maxMergeTimeSpanSecs, bucketMerge_minMergeSizeMB, bucketMerging, federated_dataset, federated_provider, hotBucketStreaming_deleteHotsAfterRestart, hotBucketStreaming_extraBucketBuildingCmdlineArgs, hotBucketStreaming_removeRemoteSlicesOnRoll, hotBucketStreaming_reportStatus, hotBucketStreaming_sendSlices, lastChanceIndex, metric_compressionBlockSize, metric_enableFloatingPointCompression, metric_maxHotBuckets, metric_splitByIndexKeys, metric_stubOutRawdataJournal, metric_timestampResolution, metric_tsidxTargetSizeMB, tsidxDedupPostingsListMaxTermsLimit, tsidxTargetSizeMB 
| where idxcluster_label!="No-idxcluster_label" 
| search NOT [ search `setup_summary_index` source=splunk_rest_data_indexes_idx_summary_data earliest=-8h latest=now | fields _time, idxcluster_label title ] 
| collect `setup_summary_index` source=splunk_rest_data_indexes_idx_summary_data testmode=false 
| stats count
}
