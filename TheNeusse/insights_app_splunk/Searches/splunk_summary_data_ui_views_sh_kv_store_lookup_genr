{
	"allow_skew": "0",
	"author": "nobody",
	"cron_schedule": "50 5 * * *",
	"defer_scheduled_searchable_idxc": "0",
	"description": "Dashboards KV Store Gen Job From Summary Index - [Daily - 05:50]",
	"disabled": "0",
	"dispatch.allow_partial_results": "1",
	"dispatch.auto_cancel": "0",
	"dispatch.auto_pause": "0",
	"dispatch.buckets": "0",
	"dispatch.earliest_time": "-2d",
	"dispatch.index_earliest": "",
	"dispatch.index_latest": "",
	"dispatch.indexedRealtime": "",
	"dispatch.indexedRealtimeMinSpan": "",
	"dispatch.indexedRealtimeOffset": "",
	"dispatch.latest_time": "now",
	"dispatch.lookups": "1",
	"dispatch.max_count": "500000",
	"dispatch.max_time": "0",
	"dispatch.rate_limit_retry": "0",
	"dispatch.reduce_freq": "10",
	"dispatch.rt_backfill": "0",
	"dispatch.rt_maximum_span": "",
	"dispatch.sample_ratio": "1",
	"dispatch.spawn_process": "1",
	"dispatch.time_format": "%FT%T.%Q%:z",
	"dispatch.ttl": "600",
	"dispatchAs": "owner",
	"eai:acl.app": "insights_app_splunk",
	"eai:acl.can_change_perms": "1",
	"eai:acl.can_list": "1",
	"eai:acl.can_share_app": "1",
	"eai:acl.can_share_global": "1",
	"eai:acl.can_share_user": "0",
	"eai:acl.can_write": "1",
	"eai:acl.modifiable": "1",
	"eai:acl.owner": "nobody",
	"eai:acl.perms.read": "*",
	"eai:acl.perms.write": "['admin', 'power', 'sc_admin']",
	"eai:acl.removable": "0",
	"eai:acl.sharing": "app",
	"embed.enabled": "0",
	"is_scheduled": "0",
	"is_visible": "1",
	"max_concurrent": "1",
	"precalculate_required_fields_for_alerts": "1",
	"published": "",
	"realtime_schedule": "1",
	"request.ui_dispatch_app": "",
	"request.ui_dispatch_view": "",
	"restart_on_searchpeer_add": "1",
	"run_n_times": "0",
	"run_on_startup": "0",
	"schedule_as": "auto",
	"schedule_priority": "default",
	"schedule_window": "auto",
	"skip_scheduled_realtime_idxc": "0",
	"splunk_server": "TheNeusse",
	"target": "saved/searches",
	"title": "splunk_summary_data_ui_views_sh_kv_store_lookup_genr",
	"updated": "1969-12-31T16:00:00-08:00",
	"vsid": "",
	"workload_pool": "",
	"search": 
`setup_summary_index_list` source=splunk_rest_data_ui_views_sh_summary_data 
| stats VALUES(Lookup_Reference) AS Lookup_Reference , VALUES(Macro_Reference) AS Macro_Reference , VALUES(Datamodel_Reference) AS Datamodel_Reference , VALUES(Index_Reference) AS Index_Reference , VALUES(Sourcetype_Reference) AS Sourcetype_Reference , VALUES(Source_Reference) AS Source_Reference , VALUES(Eventtype_Reference) AS Eventtype_Reference , VALUES(Rest_Reference) AS Rest_Reference , VALUES(Report_Reference) AS Report_Reference , VALUES(Dashboard_Reference) AS Dashboard_Reference , VALUES(Splunk_Roles) AS Splunk_Roles , VALUES(Splunk_Instance) AS Splunk_Instance , VALUES(search) AS search , VALUES(BaseSearch) AS BaseSearch , VALUES(acl_perms_read) AS acl_perms_read , VALUES(acl_perms_write) AS acl_perms_write , VALUES(panel_title) AS panel_title , VALUES(time_range) AS time_range , VALUES(auto_refresh_delay) AS auto_refresh_delay , LATEST(num_panels) AS num_panels , LATEST(sharing) AS sharing , LATEST(author) AS author , LATEST(label) AS label , LATEST(type) AS type , LATEST(description) AS description , LATEST(location) AS location , LATEST(updated) AS updated , LATEST(acl_removable) AS acl_removable , LATEST(autoRun) AS autoRun , Max(dashboard_size) AS dashboard_size , LATEST(is_time_selector) AS is_time_selector , LATEST(submitButton) AS submitButton , LATEST(version) AS version , LATEST(_time) AS _time
    BY shcluster_label, app, title 
| table _time, shcluster_label, Splunk_Roles, Splunk_Instance, app, sharing, author, title, label, type, description, location, updated, acl_perms_read, acl_perms_write, acl_removable, auto_refresh_delay, autoRun, BaseSearch, Dashboard_Reference, dashboard_size, Datamodel_Reference, Eventtype_Reference, Index_Reference, is_time_selector, Lookup_Reference, Macro_Reference, num_panels, panel_title, Report_Reference, Rest_Reference, search, Source_Reference, Sourcetype_Reference, submitButton, time_range, version 
| outputlookup splunk_rest_data_ui_views_sh_kv_store_lookup CreateInApp=true Create_Empty=true Override_If_Empty=false 
| stats count
}
