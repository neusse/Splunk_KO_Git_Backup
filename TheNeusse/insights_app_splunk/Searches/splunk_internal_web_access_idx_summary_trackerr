{
	"allow_skew": "0",
	"author": "nobody",
	"cron_schedule": "1-56/5 * * * *",
	"defer_scheduled_searchable_idxc": "0",
	"description": "Dashboard Executions tracker Job Summary Index - [At every 5th minute from 1 through 56]",
	"disabled": "0",
	"dispatch.allow_partial_results": "1",
	"dispatch.auto_cancel": "0",
	"dispatch.auto_pause": "0",
	"dispatch.buckets": "0",
	"dispatch.earliest_time": "-10m@m",
	"dispatch.index_earliest": "",
	"dispatch.index_latest": "",
	"dispatch.indexedRealtime": "",
	"dispatch.indexedRealtimeMinSpan": "",
	"dispatch.indexedRealtimeOffset": "",
	"dispatch.latest_time": "-5m@m",
	"dispatch.lookups": "1",
	"dispatch.max_count": "500000",
	"dispatch.max_time": "0",
	"dispatch.rate_limit_retry": "0",
	"dispatch.reduce_freq": "10",
	"dispatch.rt_backfill": "0",
	"dispatch.rt_maximum_span": "",
	"dispatch.sample_ratio": "1",
	"dispatch.spawn_process": "1",
	"dispatch.time_format": "%FT%T.%Q%:z",
	"dispatch.ttl": "600",
	"dispatchAs": "owner",
	"eai:acl.app": "insights_app_splunk",
	"eai:acl.can_change_perms": "1",
	"eai:acl.can_list": "1",
	"eai:acl.can_share_app": "1",
	"eai:acl.can_share_global": "1",
	"eai:acl.can_share_user": "0",
	"eai:acl.can_write": "1",
	"eai:acl.modifiable": "1",
	"eai:acl.owner": "nobody",
	"eai:acl.perms.read": "*",
	"eai:acl.perms.write": "['admin', 'power', 'sc_admin']",
	"eai:acl.removable": "0",
	"eai:acl.sharing": "app",
	"embed.enabled": "0",
	"is_scheduled": "0",
	"is_visible": "1",
	"max_concurrent": "1",
	"precalculate_required_fields_for_alerts": "1",
	"published": "",
	"realtime_schedule": "1",
	"request.ui_dispatch_app": "",
	"request.ui_dispatch_view": "",
	"restart_on_searchpeer_add": "1",
	"run_n_times": "0",
	"run_on_startup": "0",
	"schedule_as": "auto",
	"schedule_priority": "default",
	"schedule_window": "auto",
	"skip_scheduled_realtime_idxc": "0",
	"splunk_server": "TheNeusse",
	"target": "saved/searches",
	"title": "splunk_internal_web_access_idx_summary_trackerr",
	"updated": "1969-12-31T16:00:00-08:00",
	"vsid": "",
	"workload_pool": "",
	"search": 
`gmc_comment(" In order to backfill the summary index:
1. remove the | search NOT [...] code toward the bottom 
2. Adjust your time to whatever you like to backfill, for example use Last 30 Days etc...")` 
index=_internal `setup_search_head_search` sourcetype=splunk_web_access method=GET status=200 view=* NOT view IN ("home" , "search" , "dashboard*", "alert*" , "check_alerts", "report*" , "field_extractor" , "job_manager" , "dataset*" , "pivot" , "show_source" , "charting" , "data_model*" , "flashtimeline" , "integrity_check_of_installed_files" , "licenseusage" , "live_tail" , "mod_setup" , "orphaned_scheduled_searches") user!="-" 
```| rex "GET (?:/[^/]+){1,2}/app/(?<app>([^/ ?]+))/(?<view>([^/ ?]+))" ``` 
| fields _time, host, app, view, user, spent, bytes, sid, useragent, uri_query 
| eval user = trim(lower(user)) , Splunk_Instance = trim(lower(host)) 
| `get_shcluster_label(Splunk_Instance)` 
| stats 
    Max(spent) AS spent
    Max(bytes) AS bytes
    LATEST(sid) AS sid
    LATEST(useragent) AS useragent
    LATEST(uri_query) AS uri_query
    VALUES(Splunk_Roles) AS Splunk_Roles
    BY _time, shcluster_label, Splunk_Instance, app, user, view
| foreach Splunk_Roles [ eval <<FIELD>>=mvjoin(mvsort(mvdedup('<<FIELD>>')), "|") ] 
| table _time, shcluster_label, Splunk_Roles, Splunk_Instance, app, view, user, spent, bytes, sid, useragent, uri_query 
| search NOT [ search `setup_summary_index` source=splunk_internal_web_access_idx_summary_tracker earliest=-15m@m latest=now | fields _time, shcluster_label, Splunk_Instance, app, user, view ] 
| collect `setup_summary_index` source=splunk_internal_web_access_idx_summary_tracker testmode=false 
| stats count
}
