{
	"author": "nobody",
	"disabled": "0",
	"eai:acl.app": "ksconf",
	"eai:acl.can_change_perms": "1",
	"eai:acl.can_list": "1",
	"eai:acl.can_share_app": "1",
	"eai:acl.can_share_global": "1",
	"eai:acl.can_share_user": "0",
	"eai:acl.can_write": "1",
	"eai:acl.modifiable": "1",
	"eai:acl.owner": "nobody",
	"eai:acl.perms.read": "*",
	"eai:acl.perms.write": "admin",
	"eai:acl.removable": "0",
	"eai:acl.sharing": "app",
	"eai:appName": "ksconf",
	"eai:digest": "9f2865d5ea8476e590cb13916e4b7e22",
	"eai:type": "views",
	"eai:userName": "nobody",
	"isDashboard": "1",
	"isVisible": "1",
	"label": "KSCONF Home",
	"published": "",
	"rootNode": "dashboard",
	"splunk_server": "TheNeusse",
	"target": "data/ui/views",
	"title": "home",
	"updated": "1969-12-31T16:00:00-08:00",
	"version": "",
	"eai:data": 
<dashboard>
  <label>KSCONF Home</label>
  <row>
    <panel>
      <title>KSCONF app for Splunk</title>
      <html>

        <h2>KSCONF</h2>
        This utility handles a number of common Splunk app maintenance tasks in an installable python package. Specifically, this tools deals with many of the nuances with storing Splunk apps in a version control system like git and pointing live Splunk apps to a working tree, merging changes from the live system's (local) folder to the version controlled (default) folder, and dealing with more than one layer of "default" (which splunk can't handle natively).

        <h2>KSCONF App for Splunk</h2>

        <h3>So where's all the stuff?</h3>
        The <b>ksconf</b> app is not a traditional Splunk app in the sense that it's typically used to manage other Splunk apps.  KSCONF was born as a CLI (command line interface) tool and that's always were it will remain the most powerful.  While we do plan on adding some Splunk UI feature to this app, and most likely some custom search commands, it's CLI-only right now.

        <h3>Planned UI features</h3>
        <ul>
          <li><b>Local "REST"</b> - Add a <tt>rest</tt>-like command that gives the user visibility into both the local and default folders.  Splunk's built-in command merges these things together, which is typically nice, but sometimes figuring out what "overrides" and what are the defaults that shipped with an app is an important, yet difficult question to answer.</li>
          <li><b>Snapshots</b> - Take a snapshot of local and default configs with the intention of saving of state at specific point in time.   This would be combined with the ability to "diff" the snapshots and determine changes over time.  It's possible this could work without the need for a git repo.</li>
          <li><b>Promotion</b> - Support configuration promotion (moving stuff from 'local' to 'default' and allowing git commits to.  However we need to find a way to do this safely, and restrict this type of activity to certain users with the appropriate level of access control.  (This is a long-term goal)</li>
        </ul>
        Right now EVERYTHING about this app is read-only.  The <tt>ksconf</tt> command line tool can make changes to your filesystem, but only after you've opened a shell session, at which point you already have full access anyways.

        <h3>Why we made this app</h3>
        So, if this app doesn't really do much from the UI, why bother making it?  Well, simply put, it's an easier distribution model than dealing with all the python environmental variations that currently exists across various flavors of OSes.  So once you've install this app, you can easily make the <tt>ksconf</tt> CLI tool available from the console.  Run the <tt>install.py</tt> script to help you do this in the <tt>bin</tt> folder of this app.  More details are in the docs below.  Most people can simply run:

        <p>
          <tt>$SPLUNK_HOME/bin/splunk cmd python3 $SPLUNK_HOME/etc/apps/ksconf/bin/install.py</tt>
        </p>

        <h2>Learn more</h2>
        To stay up-to-date or help guide future developments, check us out on <a href="https://github.com/Kintyre/ksconf">GitHub</a>.

      </html>
    </panel>
  </row>
  <row>
    <panel>
      <title>Documentation</title>
      <html>
        <iframe src="/static/app/$env:app$/docs/index.html" height="1000px" width="100%" style="border:none;"/>
        <p/>
        You can also open these docs in a
        <a href="/static/app/$env:app$/docs/index.html" target="_blank">new window</a>
        or read the latest version
        <a href="https://ksconf.readthedocs.io">online</a>.
    </html>
    </panel>
  </row>
</dashboard>
}
